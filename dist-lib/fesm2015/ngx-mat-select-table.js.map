{"version":3,"file":"ngx-mat-select-table.js.map","sources":["ng://ngx-mat-select-table/mat-select-table.component.ts","ng://ngx-mat-select-table/directives/mat-select-table-input-restriction.directive.ts","ng://ngx-mat-select-table/ngx-mat-select-table.module.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {merge, Subject} from 'rxjs';\nimport {MatOption, MatSelect, MatSort, MatTable, MatTableDataSource, Sort, SortDirection} from '@angular/material';\nimport {isArray, isNullOrUndefined, isNumber, isString} from 'util';\nimport {MatSelectTableDataSource} from './MatSelectTableDataSource';\nimport {MatSelectTableRow} from './MatSelectTableRow';\nimport {_isNumberValue} from '@angular/cdk/coercion';\nimport {debounceTime, take, takeUntil} from 'rxjs/operators';\nimport {MatSelectTableColumn} from './MatSelectTableColumn';\nimport {MatSelectTableFilter} from './MatSelectTableFilter';\nimport {MatSelectSearchComponent} from 'ngx-mat-select-search';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n@Component({\n  selector: 'ngx-mat-select-table',\n  templateUrl: './mat-select-table.component.html',\n  styleUrls: ['./mat-select-table.component.scss'],\n  exportAs: 'ngx-mat-select-table',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MatSelectTableComponent),\n      multi: true\n    }\n  ]\n})\nexport class MatSelectTableComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnDestroy, OnChanges {\n\n  /** Data Source for the table */\n  @Input() dataSource: MatSelectTableDataSource<MatSelectTableRow>;\n\n  /**\n   * Multiple/Single mode for {@see MatSelect#multiple} to initialize.\n   * NB: switching between modes in runtime is not supported by {@see MatSelect}\n   */\n  @Input() multiple: boolean;\n\n  /** Whether or not overall search mode enabled. See {@see MatSelectTableComponent} */\n  @Input() overallSearchEnabled: boolean;\n\n  /** Default is true */\n  @Input() overallSearchVisible: boolean;\n\n  /** Whether or not should {@see MatSelectTableComponent} be visible on open. Default is true */\n  @Input() resetSortOnOpen: boolean;\n\n  /** Whether or not previous search should be cleared on open. Default is true */\n  @Input() resetFiltersOnOpen: boolean;\n\n  /**\n   * Function to customize the default label\n   */\n  @Input() customTriggerLabelFn: (value: MatSelectTableRow[]) => string;\n\n  /**\n   * Sort option for values in the customTriggerLabelFn in Multiple mode.\n   */\n  @Input() triggerLabelSort: Sort;\n\n  /**\n   * Template to customize the default trigger label. Has lesser priority than {@see MatSelectTableComponent#customTriggerLabelFn}.\n   * Substitution is case sensitive.\n   * Example: ${name} ${id} - ${address}\n   */\n  @Input() customTriggerLabelTemplate: string;\n\n  @Input() labelForNullValue: string;\n  private nullRow: MatSelectTableRow = {id: null};\n\n  /**\n   * {@see MatSelect} proxy inputs configurator\n   * {@see MatSelect#multiple} gets value from {@see MatSelectTableComponent#multiple}\n   */\n  @Input() matSelectConfigurator: { [key: string]: any };\n\n  /**\n   * {@see MatSelectSearchComponent} proxy inputs configurator\n   * {@see MatSelectSearchComponent#clearSearchInput} gets value from {@see MatSelectTableComponent#resetFiltersOnOpen}\n   * {@see MatSelectSearchComponent} {@see ControlValueAccessor} gets value from {@see MatSelectTableComponent#overallFilterControl}\n   */\n  @Input() matSelectSearchConfigurator: { [key: string]: any };\n\n  /**\n   * Apply default sorting\n   */\n  @Input() defaultSort: Sort;\n  \n  /**\n   * Action for 'All' option.\n   */\n  @Input() resetOptionAction: () => void;\n\n  @Output() close: EventEmitter<boolean> = new EventEmitter();\n\n  @ViewChild('componentSelect') private matSelect: MatSelect;\n\n  @ViewChild(MatSelectSearchComponent) private matSelectSearch: MatSelectSearchComponent;\n\n  @ViewChild(MatSort) private sort: MatSort;\n\n  @ViewChild(MatTable) private table: MatTable<MatSelectTableRow>;\n\n  @ViewChild('table', {read: ElementRef}) private tableRef: ElementRef;\n\n  @ViewChildren(MatOption) private matOptions: QueryList<MatOption>;\n\n  tableDataSource: MatSelectTableRow[];\n\n  tableColumns: string[];\n\n  tableColumnsMap: Map<string, MatSelectTableColumn>;\n\n  tableActiveRow: number;\n\n  filteredOutRows: { [key: string]: MatSelectTableRow };\n\n  completeRowList: MatSelectTableRow[] = [];\n\n  overallSearchVisibleState: boolean;\n\n  overallFilterControl: FormControl;\n\n  private filterControls: FormGroup;\n\n  private completeValueList: any[] = [];\n\n  private controlValueAccessorKeys: string[] = [\n    'formControl',\n    'formControlName',\n    'formGroup',\n    'formGroupName',\n    'formArray',\n    'formArrayName'\n  ];\n\n  /** Subject that emits when the component has been destroyed. */\n  private _onDestroy = new Subject<void>();\n\n  private _onSelectOpen = new Subject<void>();\n\n  private _onOptionsChange = new Subject<void>();\n\n  constructor(private cd: ChangeDetectorRef) {\n    this.tableColumnsMap = new Map();\n    this.filterControls = new FormGroup({});\n    this.overallFilterControl = new FormControl('');\n  }\n\n  ngOnInit(): void {\n    this.multiple = this.multiple || false;\n    this.matSelect.openedChange\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(opened => {\n        if (this.resetFiltersOnOpen !== false || !this.matOptions.length) {\n          this.resetFilters();\n        }\n        this.overallSearchVisibleState = this.overallSearchVisible;\n        if (this.resetSortOnOpen !== false) {\n          this.sort.sort({id: '', start: 'asc', disableClear: false});\n        }\n        if (!opened) {\n          this.close.emit(!opened);\n          return;\n        }\n        if (this.overallSearchEnabled) {\n          this.proxyMatSelectSearchConfiguration(this.matSelectSearchConfigurator);\n        }\n        // ToDo: get rid of this workaround (updates header row [otherwise sort mechanism produces glitches])\n        (this.table as any)._headerRowDefChanged = true;\n        // Disable sort buttons to prevent sorting change on SPACE key pressed in filter field\n        setTimeout(() => [].forEach.call(\n          this.tableRef.nativeElement.querySelectorAll('button.mat-sort-header-button'),\n          (e) => e.disabled = true)\n        );\n\n        // Patch the height of the panel to include the height of the header and footer\n        const panelElement: HTMLDivElement = this.matSelect.panel.nativeElement;\n        const panelHeight = panelElement.getBoundingClientRect().height;\n        let tableAdditionalHeight = 0;\n        this.table\n          ._getRenderedRows(this.table._headerRowOutlet)\n          .concat(this.table._getRenderedRows(this.table._footerRowOutlet))\n          .forEach(row => tableAdditionalHeight += row.getBoundingClientRect().height);\n        if (!isNaN(panelHeight)) {\n          panelElement.style.maxHeight = `${panelHeight + tableAdditionalHeight}px`;\n        }\n\n        if (!this.matSelectSearchConfigurator.disableScrollToActiveOnOptionsChanged\n          && !isNullOrUndefined(this.matSelect._keyManager) && this.completeRowList.length > 0) {\n          this._onSelectOpen.pipe(takeUntil(this._onDestroy), debounceTime(1), take(1)).subscribe(() => {\n            const firstValue = `${this.completeRowList[0].id}`;\n            for (let i = 0; i < this.tableDataSource.length; i++) {\n              if (`${this.tableDataSource[i].id}` === firstValue) {\n                this.matSelect._keyManager.setActiveItem(i);\n                try {\n                  this.cd.detectChanges();\n                } catch (ignored) {\n                }\n                break;\n              }\n            }\n          });\n        }\n      });\n\t  \n\t  this.matSelect.valueChange\t\n      .pipe(takeUntil(this._onDestroy))\t\n      .subscribe((value) => {\t\n        if (!this.multiple) {\t\n          return;\t\n        }\t\n        if (isArray(value) && value.length > 1 && value.some(v => v === '')) {\t\n          this.writeValue(value.filter(v => v !== ''));\t\n          try {\t\n            this.cd.detectChanges();\t\n          } catch (ignored) {\t\n          }\t\n        }\t\n        if (isArray(value) && value.length === 0) {\t\n          this.checkAndResetSelection();\t\n        }\t\n      });\n  }\n\n  ngAfterViewInit(): void {\n    merge(...[\n      this._onOptionsChange,\n      this.sort.sortChange,\n      this.filterControls.valueChanges,\n      this.overallFilterControl.valueChanges\n    ])\n      .pipe(takeUntil(this._onDestroy), debounceTime(100))\n      .subscribe(() => {\n        const dataClone: MatSelectTableRow[] = [...((this.dataSource || {data: []}).data || [])];\n        if (this.addNullRow()) {\n          dataClone.unshift(this.nullRow);\n        }\n\n        // Apply filtering\n        if (this.overallSearchEnabled && this.overallSearchVisibleState) {\n          this.applyOverallFilter(dataClone);\n        } else {\n          this.applyColumnLevelFilters(dataClone);\n        }\n\n        // Inherit default sorting options if sort not specified\n        if (!this.sort.active && !isNullOrUndefined(this.defaultSort) && this.defaultSort.active) {\n          this.sort.active = this.defaultSort.active;\n          this.sort.direction = this.defaultSort.direction;\n        }\n\n        // Apply default or manual sorting\n        this.tableDataSource = !this.sort.active ?\n          dataClone : this.sortData(dataClone, this.sort.active, this.sort.direction);\n\n        try {\n          this.cd.detectChanges();\n        } catch (ignored) {\n        }\n\n        this._onSelectOpen.next();\n      });\n\n    // Manually sort data for this.matSelect.options (QueryList<MatOption>) and notify matSelect.options of changes\n    // It's important to keep this.matSelect.options order synchronized with data in the table\n    //     because this.matSelect.options (QueryList<MatOption>) doesn't update it's state after table data is changed\n    this.matOptions.changes.subscribe(() => {\n      const options: { [key: string]: MatOption } = {};\n      this.matOptions.toArray()\n        .filter(option => !isNullOrUndefined(option))\n        .forEach(option => options[`${option.value}`] = option);\n      this.matSelect.options.reset(this.tableDataSource\n        .filter(row => !isNullOrUndefined(options[`${row.id}`]))\n        .map(row => options[`${row.id}`]));\n      this.matSelect.options.notifyOnChanges();\n    });\n\n    if (!isNullOrUndefined(this.matSelect._keyManager)) {\n      // Subscribe on KeyManager changes to highlight the table rows accordingly\n      this.matSelect._keyManager.change\n        .pipe(takeUntil(this._onDestroy))\n        .subscribe(activeRow => this.tableActiveRow = activeRow);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._onSelectOpen.complete();\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n\n  registerOnChange(fn: (value: any) => void): void {\n    const proxyFn: (value: any) => void = (value: any) => {\n      // ToDo: refactor - comparison mechanism isn't optimized. filteredOutRows is a map but completeValueList is an array\n      if (this.multiple === true) {\n        for (let i = this.completeValueList.length - 1; i >= 0; i--) {\n          if (this.filteredOutRows[`${this.completeValueList[i]}`] === undefined && value.indexOf(this.completeValueList[i]) === -1) {\n            this.completeValueList.splice(i, 1);\n          }\n        }\n        value\n          .filter(choice => this.completeValueList.indexOf(choice) === -1)\n          .forEach(choice => this.completeValueList.push(choice));\n        this.matSelect.value = this.completeValueList;\n        fn(this.completeValueList);\n        this.completeRowList.splice(0);\n        ((this.dataSource || {data: []}).data || [])\n          .filter(row => this.completeValueList.indexOf(row.id) !== -1)\n          .forEach(row => this.completeRowList.push(row));\n      } else {\n        fn(value);\n        this.completeRowList.splice(0);\n        ((this.dataSource || {data: []}).data || [])\n          .filter(row => row.id === value)\n          .forEach(row => this.completeRowList.push(row));\n      }\n    };\n    this.matSelect.registerOnChange(proxyFn);\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.matSelect.registerOnTouched(fn);\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.matSelect.setDisabledState(isDisabled);\n  }\n\n  writeValue(value: any): void {\n    this.updateCompleteRowList(value);\n    this.matSelect.writeValue(value);\n    if (this.matSelect.value !== value) {\n      this.matSelect.value = value;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    if (!isNullOrUndefined(changes.resetFiltersOnOpen) && changes.resetFiltersOnOpen.currentValue !== false) {\n      this.resetFilters();\n    }\n\n    if (!isNullOrUndefined(changes.dataSource)) {\n      this.updateCompleteRowList(this.completeRowList.map(row => row.id));\n    }\n\n    // Proxy @Input bindings to MatSelect\n    if (!isNullOrUndefined(changes.matSelectConfigurator)) {\n      const configuration = changes.matSelectConfigurator.currentValue;\n      Object.keys(configuration)\n        .filter(key => !['multiple', 'panelClass'].includes(key) && !this.controlValueAccessorKeys.includes(key))\n        .forEach(key => this.matSelect[key] = configuration[key]);\n      const panelClass: string[] = [];\n      panelClass.push('mat-select-search-table-panel');\n      if (!isNullOrUndefined(configuration.panelClass)) {\n        panelClass.push(configuration.panelClass);\n      }\n      if (this.overallSearchEnabled) {\n        panelClass.push('mat-select-search-panel');\n      }\n      this.matSelect.panelClass = panelClass;\n    }\n\n    if (!isNullOrUndefined(changes.matSelectSearchConfigurator)) {\n      this.proxyMatSelectSearchConfiguration(changes.matSelectSearchConfigurator.currentValue);\n    }\n\n    if (!isNullOrUndefined(changes.dataSource)\n      && !isNullOrUndefined(changes.dataSource.currentValue)\n      && isArray(changes.dataSource.currentValue.data)) {\n      this.tableDataSource = [...changes.dataSource.currentValue.data];\n      if (this.addNullRow()) {\n        this.tableDataSource.unshift(this.nullRow);\n      }\n      this.tableColumns = ['_selection', ...changes.dataSource.currentValue.columns.map(column => column.key)];\n      this.tableColumnsMap.clear();\n      changes.dataSource.currentValue.columns.forEach(column => this.tableColumnsMap.set(column.key, column));\n      this.applyProxyToArray(changes.dataSource.currentValue.data, () => {\n        this._onOptionsChange.next();\n      });\n      this._onOptionsChange.next();\n    }\n  }\n\n  emulateMatOptionClick(event: MouseEvent): void {\n    if (event.composedPath()\n      .filter(et => et instanceof HTMLElement)\n      .some((et: HTMLElement) => et.tagName.toLowerCase() === 'mat-option')) {\n      return;\n    }\n    if (!(event.target instanceof HTMLElement)) {\n      return;\n    }\n    let rowElement = event.target;\n    while (rowElement != null && rowElement instanceof HTMLElement && rowElement.tagName.toLowerCase() !== 'tr') {\n      rowElement = rowElement.parentElement;\n    }\n    if (rowElement === null) {\n      return;\n    }\n    const childOption: HTMLElement = rowElement.querySelector('mat-option');\n    if (!childOption) {\n      return;\n    }\n    childOption.click();\n  }\n\n\n  filterFormControl(key: string): FormControl {\n    if (!this.filterControls.contains(key)) {\n      this.filterControls.registerControl(key, new FormControl(''));\n    }\n    return <FormControl>this.filterControls.get(key);\n  }\n\n  simpleTriggerLabelFn(value: MatSelectTableRow[]): string {\n    if (!isNullOrUndefined(this.triggerLabelSort)) {\n      this.sortData(value, this.triggerLabelSort.active, this.triggerLabelSort.direction);\n    }\n    return value.map(row => {\n      if (isNullOrUndefined(row)) {\n        return '';\n      }\n      if (isNullOrUndefined(this.customTriggerLabelTemplate)\n        || typeof this.customTriggerLabelTemplate !== 'string'\n        || this.customTriggerLabelTemplate.trim().length === 0) {\n        return `${row.id}`;\n      }\n      let atLeastPartialSubstitution = false;\n      const substitution: string = this.customTriggerLabelTemplate.replace(/[$]{1}[{]{1}([^}]+)[}]{1}?/g, (_, key) =>\n        !isNullOrUndefined(row[key]) && (atLeastPartialSubstitution = true) ? row[key] : '');\n      if (atLeastPartialSubstitution === false) {\n        return `${row.id}`;\n      }\n      return substitution.trim();\n    }).join(', ');\n  }\n\n  toggleOverallSearch(): void {\n    this.overallSearchVisibleState = !this.overallSearchVisibleState;\n    this.resetFilters();\n    if (this.overallSearchVisibleState) {\n      setTimeout(() => this.matSelectSearch._focus());\n    }\n  }\n\n  private updateCompleteRowList(value: any[]): void {\n    this.completeRowList.splice(0);\n    this.completeValueList.splice(0);\n    if (isNullOrUndefined(value)) {\n      return;\n    }\n    const valueArray: any[] = !isArray(value) ? [value] : value;\n    valueArray\n      .filter(valueId => !isNullOrUndefined(valueId))\n      .forEach(valueId => {\n        ((this.dataSource || {data: []}).data || [])\n          .filter(row => !isNullOrUndefined(row) && !isNullOrUndefined(row.id) && row.id === valueId)\n          .forEach(row => {\n            this.completeRowList.push(row);\n            this.completeValueList.push(row.id);\n          });\n      });\n  }\n\n  private proxyMatSelectSearchConfiguration(configuration: { [key: string]: any }): void {\n    if (isNullOrUndefined(this.matSelectSearch)) {\n      return;\n    }\n\n    // Proxy @Input bindings to NgxMatSelectSearch\n    Object.keys(configuration)\n      .filter(key => !['clearSearchInput'].includes(key) && !this.controlValueAccessorKeys.includes(key))\n      .forEach(key => this.matSelectSearch[key] = configuration[key]);\n  }\n\n  private applyColumnLevelFilters(data: MatSelectTableRow[]): void {\n    this.filteredOutRows = {};\n    const filters: { [key: string]: { filter: MatSelectTableFilter, value: any } } = {};\n    Object.keys(this.filterControls.controls)\n      .filter(key => this.tableColumnsMap.has(key)\n        && !isNullOrUndefined(this.tableColumnsMap.get(key).filter)\n        // If filter is enabled\n        && this.tableColumnsMap.get(key).filter.enabled !== false)\n      .filter(key => {\n        const value = this.filterControls.get(key).value;\n        return !isNullOrUndefined(value)\n          // If an array - check it's not empty\n          && ((isArray(value) && value.length > 0)\n            // If string - check that not blank\n            || (typeof value === 'string' && value.trim().length > 0)\n            // If number - check that toString() is not blank\n            || (typeof value === 'number' && `${value}`.trim().length > 0));\n      })\n      .forEach(key => filters[key] = {\n        filter: this.tableColumnsMap.get(key).filter,\n        value: this.filterControls.get(key).value\n      });\n    const filterKeys: string[] = Object.keys(filters);\n    for (let i = data.length - 1; i >= 0; i--) {\n      for (let k = 0; k < filterKeys.length; k++) {\n        const filterKey: string = filterKeys[k];\n        const row: MatSelectTableRow = data[i];\n        if (isNullOrUndefined(row)) {\n          continue;\n        }\n        const cellValue: any = row[filterKey];\n        if (isNullOrUndefined(cellValue)) {\n          data.splice(i, 1).forEach(item => this.filteredOutRows[`${item.id}`] = item);\n          continue;\n        }\n        const filter = filters[filterKey];\n        const comparator = filter.filter.comparator;\n        if (typeof filter.filter.comparatorFn === 'function') {\n          if (!filter.filter.comparatorFn.call(null, cellValue, filter.value, row)) {\n            data.splice(i, 1).forEach(item => this.filteredOutRows[`${item.id}`] = item);\n            break;\n          }\n        } else if (isNullOrUndefined(comparator) || comparator === 'equals') {\n          if (filter.value !== cellValue) {\n            data.splice(i, 1).forEach(item => this.filteredOutRows[`${item.id}`] = item);\n            break;\n          }\n        } else if (typeof cellValue === 'string' && typeof filter.value === 'string') {\n          const cellValueLC: string = `${cellValue}`.toLowerCase();\n          const filterValueLC: string = filter.value.toLowerCase();\n          if (isNullOrUndefined(comparator) || comparator === 'equalsIgnoreCase') {\n            if (filterValueLC !== cellValueLC) {\n              data.splice(i, 1).forEach(item => this.filteredOutRows[`${item.id}`] = item);\n              break;\n            }\n          } else if (comparator === 'contains') {\n            if (cellValue.indexOf(filter.value) === -1) {\n              data.splice(i, 1).forEach(item => this.filteredOutRows[`${item.id}`] = item);\n              break;\n            }\n          } else if (comparator === 'containsIgnoreCase') {\n            if (cellValueLC.indexOf(filterValueLC) === -1) {\n              data.splice(i, 1).forEach(item => this.filteredOutRows[`${item.id}`] = item);\n              break;\n            }\n          } else if (comparator === 'startsWith') {\n            if (!cellValue.startsWith(filter.value)) {\n              data.splice(i, 1).forEach(item => this.filteredOutRows[`${item.id}`] = item);\n              break;\n            }\n          } else if (comparator === 'startsWithIgnoreCase') {\n            if (!cellValueLC.startsWith(filterValueLC)) {\n              data.splice(i, 1).forEach(item => this.filteredOutRows[`${item.id}`] = item);\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private applyOverallFilter(data: MatSelectTableRow[]): void {\n    this.filteredOutRows = {};\n    if (isNullOrUndefined(this.overallFilterControl.value)) {\n      return;\n    }\n    const filterValueLC: string = this.overallFilterControl.value.toLowerCase();\n    if (filterValueLC.trim().length === 0) {\n      return;\n    }\n    for (let i = data.length - 1; i >= 0; i--) {\n      const row: MatSelectTableRow = data[i];\n      let rowShouldBeFiltered = true;\n      for (let j = this.dataSource.columns.length - 1; j >= 0; j--) {\n        const key: string = this.dataSource.columns[j].key;\n        const cellValue: any = row[key];\n        if (isNullOrUndefined(cellValue)) {\n          continue;\n        }\n        const cellValueLC: string = `${cellValue}`.toLowerCase();\n        if (cellValueLC.indexOf(filterValueLC) !== -1) {\n          rowShouldBeFiltered = false;\n          break;\n        }\n      }\n      if (rowShouldBeFiltered) {\n        data.splice(i, 1).forEach(item => this.filteredOutRows[`${item.id}`] = item);\n      }\n    }\n  }\n\n  private applyProxyToArray(array: any[], callback: () => void): void {\n    ['pop', 'push', 'reverse', 'shift', 'unshift', 'splice', 'sort'].forEach((methodName) => {\n      array[methodName] = function () {\n        const res = Array.prototype[methodName].apply(array, arguments); // call normal behaviour\n        callback.apply(array, arguments); // finally call the callback supplied\n        return res;\n      };\n    });\n  }\n\n  private resetFilters(): void {\n    this.overallFilterControl.setValue('');\n    Object.keys(this.filterControls.controls)\n      .forEach(key => this.filterControls.get(key).setValue(''));\n  }\n\n  /**\n   * Taken from {@see MatTableDataSource#sortingDataAccessor}\n   *\n   * @param data\n   * @param sortHeaderId\n   */\n  private sortingDataAccessor(data: MatSelectTableRow, active: string): string | number | Date {\n\n    const value = (data as { [key: string]: any })[active];\n\n    if (_isNumberValue(value)) {\n      const numberValue = Number(value);\n\n      // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n      // leave them as strings. For more info: https://goo.gl/y5vbSg\n      return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n    }\n\n    return value;\n  }\n\n\n  private sortData(data: MatSelectTableRow[], active: string, direction: SortDirection): MatSelectTableRow[] {\n    if (!active || direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      let aValue = this.sortingDataAccessor(a, active);\n      let bValue = this.sortingDataAccessor(b, active);\n\n      if (a.id === null) {\n        return -1;\n      } else if (b.id === null) {\n        return 1;\n      }\n\n      // Both null/undefined/equal value check\n      if (aValue === bValue) {\n        return 0;\n      }\n\n      // One null value check\n      if (isNullOrUndefined(aValue) && !isNullOrUndefined(bValue)) {\n        return -1;\n      } else if (!isNullOrUndefined(aValue) && isNullOrUndefined(bValue)) {\n        return 1;\n      }\n\n      if (aValue instanceof Date) {\n        aValue = aValue.getTime();\n      }\n      if (bValue instanceof Date) {\n        bValue = bValue.getTime();\n      }\n\n      // User localeCompare for strings\n      if (isString(aValue) && isString(bValue)) {\n        return (<string>aValue).localeCompare(<string>bValue) * (direction === 'asc' ? 1 : -1);\n      }\n\n      // Try to convert to a Number type\n      aValue = isNaN(<number>aValue) ? `${aValue}` : +aValue;\n      bValue = isNaN(<number>bValue) ? `${bValue}` : +bValue;\n\n      // if one is number and other is String\n      if (isString(aValue) && isNumber(bValue)) {\n        return (1) * (direction === 'asc' ? 1 : -1);\n      }\n      if (isNumber(aValue) && isString(bValue)) {\n        return (-1) * (direction === 'asc' ? 1 : -1);\n      }\n\n      // Compare as Numbers otherwise\n      return (aValue > bValue ? 1 : -1) * (direction === 'asc' ? 1 : -1);\n    });\n\t\n  }\n\n  addNullRow(): boolean {\n    return !this.multiple && !isNullOrUndefined(this.labelForNullValue);\n  }\n  \n  private checkAndResetSelection() {\t\n    if (this.matSelect.value && isArray(this.matSelect.value) && this.matSelect.value.length < 1\t\n      && !isNullOrUndefined(this.resetOptionAction)) {\t\n      this.resetOptionAction();\t\n    }\t\n  }\n}\n","import {Directive, HostListener, Input} from '@angular/core';\n\n@Directive({\n  selector: '[appInputRestriction]'\n})\nexport class MatSelectTableInputRestrictionDirective {\n\n  @Input() appInputRestriction: string;\n\n  @HostListener('keypress', ['$event']) onKeyPress(event) {\n    if (this.appInputRestriction === 'integer') {\n      this.integerOnly(event);\n    }\n  }\n\n  integerOnly(event) {\n    const e = <KeyboardEvent>event;\n    if (['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'].indexOf(e.key) === -1) {\n      e.preventDefault();\n    }\n  }\n\n  @HostListener('paste', ['$event']) onPaste(event) {\n    let regex;\n    if (this.appInputRestriction === 'integer') {\n      regex = /^[0-9]*$/;\n    }\n    const e = <ClipboardEvent>event;\n    const pasteData = e.clipboardData.getData('text/plain');\n    if (!pasteData.match(regex)) {\n      e.preventDefault();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {CommonModule} from '@angular/common';\nimport {MatSelectTableComponent} from './mat-select-table.component';\nimport {NgxMatSelectSearchModule} from 'ngx-mat-select-search';\nimport {\n  MatCommonModule,\n  MatIconModule,\n  MatInputModule,\n  MatOptionModule,\n  MatSelectModule,\n  MatSortModule,\n  MatTableModule\n} from '@angular/material';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatSelectTableInputRestrictionDirective} from './directives/mat-select-table-input-restriction.directive';\n\n@NgModule({\n  declarations: [\n    MatSelectTableComponent,\n    MatSelectTableInputRestrictionDirective\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatSortModule,\n    MatOptionModule,\n    MatCommonModule,\n    MatTableModule,\n    MatInputModule,\n    MatIconModule,\n    NgxMatSelectSearchModule\n  ],\n  providers: [],\n  bootstrap: [MatSelectTableComponent],\n  exports: [MatSelectTableComponent]\n})\nexport class NgxMatSelectTableModule {\n}\n"],"names":[],"mappings":"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"}
